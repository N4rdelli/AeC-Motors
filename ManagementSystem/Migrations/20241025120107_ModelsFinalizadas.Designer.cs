// <auto-generated />
using System;
using ManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241025120107_ModelsFinalizadas")]
    partial class ModelsFinalizadas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManagementSystem.Models.Costumer", b =>
                {
                    b.Property<Guid>("CostumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostumerCPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CostumerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostumerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CostumerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CostumerRG")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CostumerId");

                    b.ToTable("Costumer");
                });

            modelBuilder.Entity("ManagementSystem.Models.Rental", b =>
                {
                    b.Property<Guid>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CostumerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RentalDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("RentalEnd")
                        .HasColumnType("date");

                    b.Property<bool>("RentalPaymentStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("RentalPrince")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("RentalStart")
                        .HasColumnType("date");

                    b.Property<string>("RentalStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RentalId");

                    b.HasIndex("CostumerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Rental");
                });

            modelBuilder.Entity("ManagementSystem.Models.Vehicle", b =>
                {
                    b.Property<Guid>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VehicleLicensePlate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehicleModel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("VehicleRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VehicleStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("YardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VehicleId");

                    b.HasIndex("YardId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("ManagementSystem.Models.Yard", b =>
                {
                    b.Property<Guid>("YardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YardAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YardCurrentColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YardCurrentQuantity")
                        .HasColumnType("int");

                    b.Property<string>("YardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YardTotalCapacity")
                        .HasColumnType("int");

                    b.HasKey("YardId");

                    b.ToTable("Yard");
                });

            modelBuilder.Entity("ManagementSystem.Models.Rental", b =>
                {
                    b.HasOne("ManagementSystem.Models.Costumer", "Costumer")
                        .WithMany()
                        .HasForeignKey("CostumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Costumer");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ManagementSystem.Models.Vehicle", b =>
                {
                    b.HasOne("ManagementSystem.Models.Yard", "Yard")
                        .WithMany()
                        .HasForeignKey("YardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yard");
                });
#pragma warning restore 612, 618
        }
    }
}
